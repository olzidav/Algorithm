import java.util.Arrays;
import java.util.Comparator;

public class FractionalKnapsack {

    static class Item {
        int value, weight;

        public Item(int value, int weight) {
            this.value = value;
            this.weight = weight;
        }
    }

    public static double fractionalKnapsack(int W, Item[] items) {
        // Sort items by value-to-weight ratio in descending order
        Arrays.sort(items, new Comparator<Item>() {
            @Override
            public int compare(Item o1, Item o2) {
                double ratio1 = (double) o1.value / o1.weight;
                double ratio2 = (double) o2.value / o2.weight;
                return Double.compare(ratio2, ratio1); 
            }
        });

        double maxValue = 0.0; 
        int currentWeight = 0; 

        for (Item item : items) {
            if (currentWeight + item.weight <= W) {
          
                maxValue += item.value;
                currentWeight += item.weight;
            } else {
           
                int remainingWeight = W - currentWeight;
                maxValue += item.value * ((double) remainingWeight / item.weight);
                break;
            }
        }

        return maxValue;
    }
}
