import java.util.*;

public class Solution {
    public int[] assignBikes(int[][] workers, int[][] bikes) {
        int n = workers.length;
        int m = bikes.length;

        List<int[]> distances = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                int distance = Math.abs(workers[i][0] - bikes[j][0]) + Math.abs(workers[i][1] - bikes[j][1]);
                distances.add(new int[] {distance, i, j});
            }
        }

        distances.sort((a, b) -> {
            if (a[0] != b[0]) return a[0] - b[0];
            if (a[1] != b[1]) return a[1] - b[1];
            return a[2] - b[2];
        });

        boolean[] bikeTaken = new boolean[m];
        int[] assigned = new int[n];
        Arrays.fill(assigned, -1);

        for (int[] dist : distances) {
            int worker = dist[1], bike = dist[2];
            if (assigned[worker] == -1 && !bikeTaken[bike]) {
                assigned[worker] = bike;
                bikeTaken[bike] = true;
            }
        }

        return assigned;
    }
}
