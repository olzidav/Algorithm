class Item:

    def __init__(self, value, weight):
        self.value = value
        self.weight = weight

def fractional_knapsack(capacity, items):


    items.sort(key=lambda item: item.value / item.weight, reverse=True)

    total_value = 0.0 
    current_weight = 0  

    for item in items:
        if current_weight + item.weight <= capacity:
   
            total_value += item.value
            current_weight += item.weight
        else:

            remaining_weight = capacity - current_weight
            total_value += (item.value / item.weight) * remaining_weight
            break

    return total_value
