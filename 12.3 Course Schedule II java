import java.util.*;

public class Solution {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
  
        List<Integer>[] adjList = new ArrayList[numCourses];
        int[] indegree = new int[numCourses];
        for (int i = 0; i < numCourses; i++) {
            adjList[i] = new ArrayList<>();
        }

  
        for (int[] prerequisite : prerequisites) {
            int course = prerequisite[0];
            int preCourse = prerequisite[1];
            adjList[preCourse].add(course);
            indegree[course]++;
        }


        Queue<Integer> queue = new LinkedList<>();
        for (int i = 0; i < numCourses; i++) {
            if (indegree[i] == 0) {
                queue.offer(i);
            }
        }


        List<Integer> result = new ArrayList<>();
        while (!queue.isEmpty()) {
            int course = queue.poll();
            result.add(course);

            for (int neighbor : adjList[course]) {
                indegree[neighbor]--;
                if (indegree[neighbor] == 0) {
                    queue.offer(neighbor);
                }
            }
        }

    
        if (result.size() == numCourses) {
            int[] order = new int[numCourses];
            for (int i = 0; i < numCourses; i++) {
                order[i] = result.get(i);
            }
            return order;
        } else {
            return new int[0];  
        }
    }

    public static void main(String[] args) {
        Solution solution = new Solution();

       
        int numCourses1 = 2;
        int[][] prerequisites1 = {{1, 0}};
        System.out.println(Arrays.toString(solution.findOrder(numCourses1, prerequisites1)));  

        
        int numCourses2 = 4;
        int[][] prerequisites2 = {{1, 0}, {2, 0}, {3, 1}, {3, 2}};
        System.out.println(Arrays.toString(solution.findOrder(numCourses2, prerequisites2)));  

        
        int numCourses3 = 1;
        int[][] prerequisites3 = {};
        System.out.println(Arrays.toString(solution.findOrder(numCourses3, prerequisites3)));  
    }
}
